/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ui;

import Dao.ChatLieuDAO;
import Dao.ColorDAO;
import Dao.DanhMucDAO;
import Dao.NhaCungCapDAO;
import Dao.SizeDAO;
import Entity.DanhMuc;
import Entity.ChatLieu;
import Entity.Color;
import Entity.NhaCungCap;
import Entity.Size;
import Util.MsgBox;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tri03
 */
public class ThuocTinhJpanel extends javax.swing.JPanel {

    /**
     * Creates new form NhaCungCapJpanel
     */
    public ThuocTinhJpanel() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        txtMau = new javax.swing.JTextField();
        btnThemMau = new javax.swing.JButton();
        btnXoaMau = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblMau = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        txtChatLieu = new javax.swing.JTextField();
        btnThemChatLieu = new javax.swing.JButton();
        btnXoaChatLieu = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblChatLieu = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        txtSize = new javax.swing.JTextField();
        btnThemSize = new javax.swing.JButton();
        btnXoaSize = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSize = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        txtMaNCC = new javax.swing.JTextField();
        txtTenNCC = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        btnThemNCC = new javax.swing.JButton();
        btnXoaNCC = new javax.swing.JButton();
        btnSuaNCC = new javax.swing.JButton();
        btnMoiNCC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNhaCungCap = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtDanhMuc = new javax.swing.JTextField();
        btnThemDanhMuc = new javax.swing.JButton();
        btnXoaDanhMuc = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblDanhMuc = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        tabs.setBackground(new java.awt.Color(255, 255, 255));
        tabs.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Thuộc Tính ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(204, 0, 0))); // NOI18N
        tabs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        txtMau.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thêm màu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        btnThemMau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/them_32.png"))); // NOI18N
        btnThemMau.setText("Thêm");
        btnThemMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemMauActionPerformed(evt);
            }
        });

        btnXoaMau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/xoa_32.png"))); // NOI18N
        btnXoaMau.setText("Xóa");
        btnXoaMau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaMauActionPerformed(evt);
            }
        });

        tblMau.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã màu", "Tên màu"
            }
        ));
        tblMau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMauMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblMau);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnThemMau)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaMau))
                    .addComponent(txtMau))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtMau, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnXoaMau, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnThemMau, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 167, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabs.addTab("Màu ", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        txtChatLieu.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thêm chất liệu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        btnThemChatLieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/them_32.png"))); // NOI18N
        btnThemChatLieu.setText("Thêm");
        btnThemChatLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemChatLieuActionPerformed(evt);
            }
        });

        btnXoaChatLieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/xoa_32.png"))); // NOI18N
        btnXoaChatLieu.setText("Xóa");
        btnXoaChatLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaChatLieuActionPerformed(evt);
            }
        });

        tblChatLieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã chất liệu", "Tên chất liệu"
            }
        ));
        tblChatLieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChatLieuMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblChatLieu);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnThemChatLieu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaChatLieu))
                    .addComponent(txtChatLieu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnXoaChatLieu, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnThemChatLieu, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 167, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabs.addTab("Chất liệu", jPanel4);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txtSize.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thêm size", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        btnThemSize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/them_32.png"))); // NOI18N
        btnThemSize.setText("Thêm");
        btnThemSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSizeActionPerformed(evt);
            }
        });

        btnXoaSize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/xoa_32.png"))); // NOI18N
        btnXoaSize.setText("Xóa");
        btnXoaSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSizeActionPerformed(evt);
            }
        });

        tblSize.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã size", "Tên size"
            }
        ));
        tblSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSizeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSize);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnThemSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaSize))
                    .addComponent(txtSize))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnXoaSize, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnThemSize, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 167, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabs.addTab("Size", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Nhà Cung Cấp ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(204, 0, 0))); // NOI18N

        txtMaNCC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), " Mã nhà cung cấp", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        txtTenNCC.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Tên nhà cung cấp", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        txtSDT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Số điện thoại", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        txtDiaChi.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Địa chỉ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        btnThemNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/them_32.png"))); // NOI18N
        btnThemNCC.setText("Thêm");
        btnThemNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNCCActionPerformed(evt);
            }
        });

        btnXoaNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/xoa_32.png"))); // NOI18N
        btnXoaNCC.setText("Xóa");
        btnXoaNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNCCActionPerformed(evt);
            }
        });

        btnSuaNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/sua_32.png"))); // NOI18N
        btnSuaNCC.setText("Sửa");
        btnSuaNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaNCCActionPerformed(evt);
            }
        });

        btnMoiNCC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/tao_moi_32.png"))); // NOI18N
        btnMoiNCC.setText("Mới");
        btnMoiNCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiNCCActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblNhaCungCap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Mã NCC", "Tên NCC", "SDT", "Địa chỉ"
            }
        ));
        tblNhaCungCap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhaCungCapMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNhaCungCap);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTenNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnThemNCC)
                            .addComponent(btnSuaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnXoaNCC, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(btnMoiNCC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                .addGap(33, 33, 33))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(txtTenNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXoaNCC)
                            .addComponent(btnThemNCC))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMoiNCC)
                            .addComponent(btnSuaNCC))
                        .addGap(0, 40, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Danh Mục ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(204, 0, 0))); // NOI18N

        txtDanhMuc.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Thêm danh mục", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 102, 102))); // NOI18N

        btnThemDanhMuc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/them_32.png"))); // NOI18N
        btnThemDanhMuc.setText("Thêm");
        btnThemDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemDanhMucActionPerformed(evt);
            }
        });

        btnXoaDanhMuc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/xoa_32.png"))); // NOI18N
        btnXoaDanhMuc.setText("Xóa");
        btnXoaDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDanhMucActionPerformed(evt);
            }
        });

        tblDanhMuc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Danh Mục", "Tên Danh Mục"
            }
        ));
        tblDanhMuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDanhMucMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblDanhMuc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThemDanhMuc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaDanhMuc))
                    .addComponent(txtDanhMuc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnXoaDanhMuc, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnThemDanhMuc, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabs)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDanhMucActionPerformed
        // TODO add your handling code here:
        deleteDanhMuc();
    }//GEN-LAST:event_btnXoaDanhMucActionPerformed

    private void btnThemDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemDanhMucActionPerformed
        // TODO add your handling code here:
        insertDanhMuc();
    }//GEN-LAST:event_btnThemDanhMucActionPerformed

    private void tblDanhMucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDanhMucMouseClicked
        // TODO add your handling code here:
        this.rowdm = tblDanhMuc.getSelectedRow();
        editDanhMuc();
    }//GEN-LAST:event_tblDanhMucMouseClicked

    private void btnThemMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemMauActionPerformed
        // TODO add your handling code here:
        insertmau();
    }//GEN-LAST:event_btnThemMauActionPerformed

    private void btnXoaMauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaMauActionPerformed
        // TODO add your handling code here:
        deleteMau();
    }//GEN-LAST:event_btnXoaMauActionPerformed

    private void tblMauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMauMouseClicked
        // TODO add your handling code here:
        this.rowm = tblMau.getSelectedRow();
        editMau();
    }//GEN-LAST:event_tblMauMouseClicked

    private void btnThemChatLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemChatLieuActionPerformed
        // TODO add your handling code here:
        insertChatLieu();
    }//GEN-LAST:event_btnThemChatLieuActionPerformed

    private void btnXoaChatLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaChatLieuActionPerformed
        // TODO add your handling code here:
        deleteChatLieu();
    }//GEN-LAST:event_btnXoaChatLieuActionPerformed

    private void tblChatLieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChatLieuMouseClicked
        // TODO add your handling code here:
        this.rowcl = tblChatLieu.getSelectedRow();
        editChatLieu();
    }//GEN-LAST:event_tblChatLieuMouseClicked

    private void btnThemNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNCCActionPerformed
        // TODO add your handling code here:
        insertNCC();
    }//GEN-LAST:event_btnThemNCCActionPerformed

    private void btnXoaNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNCCActionPerformed
        // TODO add your handling code here:
        deleteNCC();
    }//GEN-LAST:event_btnXoaNCCActionPerformed

    private void btnSuaNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNCCActionPerformed
        // TODO add your handling code here:
        updateNCC();
    }//GEN-LAST:event_btnSuaNCCActionPerformed

    private void btnMoiNCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiNCCActionPerformed
        // TODO add your handling code here:
        clearFormNCC();
    }//GEN-LAST:event_btnMoiNCCActionPerformed

    private void tblNhaCungCapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhaCungCapMouseClicked
        // TODO add your handling code here:
        this.rowncc = tblNhaCungCap.getSelectedRow();
        editNCC();
    }//GEN-LAST:event_tblNhaCungCapMouseClicked

    private void tblSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSizeMouseClicked
        // TODO add your handling code here:
        this.rows = tblSize.getSelectedRow();
        editSize();
    }//GEN-LAST:event_tblSizeMouseClicked

    private void btnThemSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSizeActionPerformed
        // TODO add your handling code here:
        insertSize();
    }//GEN-LAST:event_btnThemSizeActionPerformed

    private void btnXoaSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSizeActionPerformed
        // TODO add your handling code here:
        deleteSize();
    }//GEN-LAST:event_btnXoaSizeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoiNCC;
    private javax.swing.JButton btnSuaNCC;
    private javax.swing.JButton btnThemChatLieu;
    private javax.swing.JButton btnThemDanhMuc;
    private javax.swing.JButton btnThemMau;
    private javax.swing.JButton btnThemNCC;
    private javax.swing.JButton btnThemSize;
    private javax.swing.JButton btnXoaChatLieu;
    private javax.swing.JButton btnXoaDanhMuc;
    private javax.swing.JButton btnXoaMau;
    private javax.swing.JButton btnXoaNCC;
    private javax.swing.JButton btnXoaSize;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblChatLieu;
    private javax.swing.JTable tblDanhMuc;
    private javax.swing.JTable tblMau;
    private javax.swing.JTable tblNhaCungCap;
    private javax.swing.JTable tblSize;
    private javax.swing.JTextField txtChatLieu;
    private javax.swing.JTextField txtDanhMuc;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtMaNCC;
    private javax.swing.JTextField txtMau;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSize;
    private javax.swing.JTextField txtTenNCC;
    // End of variables declaration//GEN-END:variables

    private void init() {
        fillTableDanhMuc();
        fillTableChatLieu();
        fillTableMau();
        fillTableSize();
        fillTableNCC();
    }

// ==========================DANH MỤC===============================
    int rowdm = 1;
    DanhMucDAO daodm = new DanhMucDAO();

    private void fillTableDanhMuc() {
        DefaultTableModel model = (DefaultTableModel) tblDanhMuc.getModel();
        model.setRowCount(0);
        try {
            List<DanhMuc> listdm = daodm.selectAll();
            for (DanhMuc dm : listdm) {
                Object[] row = {
                    dm.getIDDanhMuc(), dm.getTenDanhMuc()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void clearFormDanhMuc() {
        txtDanhMuc.setText("");
    }

    DanhMuc getFormDanhMuc() {
        DanhMuc dm = new DanhMuc();
        dm.setTenDanhMuc(txtDanhMuc.getText());
        return dm;
    }

    private void setFormDanhMuc(DanhMuc dm) {
        txtDanhMuc.setText(String.valueOf(dm.getTenDanhMuc()));
    }

    private void editDanhMuc() {
        int iddm = (int) tblDanhMuc.getValueAt(rowdm, 0);
        DanhMuc dm = daodm.selectById(iddm);
        setFormDanhMuc(dm);
    }

    private void deleteDanhMuc() {
        try {
            int iddm = (int) tblDanhMuc.getValueAt(rowdm, 0);
            DanhMuc dm = daodm.selectById(iddm);
            daodm.delete(iddm);
            fillTableDanhMuc();
            clearFormDanhMuc();
            MsgBox.alert(this, "Xóa thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }

    }

    private void insertDanhMuc() {
        if (isValidatedDanhMuc()) {
            DanhMuc dm = getFormDanhMuc();
            try {
                daodm.insert(dm);
                fillTableDanhMuc();
                MsgBox.alert(this, "Thêm thành công!");
                clearFormDanhMuc();
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm thất bại!");
            }
        }
    }

    boolean isValidatedDanhMuc() {
        if (txtDanhMuc.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống tên danh mục!");
            return false;
        }

        return true;
    }

// ==========================MÀU===============================
    int rowm = 1;
    ColorDAO daom = new ColorDAO();

    private void fillTableMau() {
        DefaultTableModel model = (DefaultTableModel) tblMau.getModel();
        model.setRowCount(0);
        try {
            List<Color> listm = daom.selectAll();
            for (Color m : listm) {
                Object[] row = {
                    m.getIDColor(), m.getTenColor()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void clearFormMau() {
        txtMau.setText("");
    }

    Color getFormMau() {
        Color m = new Color();
        m.setTenColor(txtMau.getText());
        return m;
    }

    private void setFormMau(Color m) {
        txtMau.setText(String.valueOf(m.getTenColor()));
    }

    private void editMau() {
        int idm = (int) tblMau.getValueAt(rowm, 0);
        Color m = daom.selectById(idm);
        setFormMau(m);
    }

    private void deleteMau() {
        try {
            int idm = (int) tblMau.getValueAt(rowm, 0);
            Color m = daom.selectById(idm);
            daom.delete(idm);
            fillTableMau();
            clearFormMau();
            MsgBox.alert(this, "Xóa thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }

    }

    private void insertmau() {
        if (isValidatedMau()) {
            Color m = getFormMau();
            try {
                daom.insert(m);
                fillTableMau();
                MsgBox.alert(this, "Thêm thành công!");
                clearFormMau();
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm thất bại!");
            }
        }
    }

    boolean isValidatedMau() {
        if (txtMau.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống tên màu!");
            return false;
        }
        return true;
    }

// ==========================CHẤT LIỆU===============================
    int rowcl = 1;
    ChatLieuDAO daocl = new ChatLieuDAO();

    private void fillTableChatLieu() {
        DefaultTableModel model = (DefaultTableModel) tblChatLieu.getModel();
        model.setRowCount(0);
        try {
            List<ChatLieu> listcl = daocl.selectAll();
            for (ChatLieu cl : listcl) {
                Object[] row = {
                    cl.getIDChatLieu(), cl.getTenChatLieu()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void clearFormChatLieu() {
        txtChatLieu.setText("");
    }

    ChatLieu getFormChatLieu() {
        ChatLieu cl = new ChatLieu();
        cl.setTenChatLieu(txtChatLieu.getText());
        return cl;
    }

    private void setFormChatLieu(ChatLieu cl) {
        txtChatLieu.setText(String.valueOf(cl.getTenChatLieu()));
    }

    private void editChatLieu() {
        int idcl = (int) tblChatLieu.getValueAt(rowcl, 0);
        ChatLieu cl = daocl.selectById(idcl);
        setFormChatLieu(cl);
    }

    private void deleteChatLieu() {
        try {
            int idcl = (int) tblChatLieu.getValueAt(rowcl, 0);
            ChatLieu cl = daocl.selectById(idcl);
            daocl.delete(idcl);
            fillTableChatLieu();
            clearFormChatLieu();
            MsgBox.alert(this, "Xóa thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }

    }

    private void insertChatLieu() {
        if (isValidatedChatLieu()) {
            ChatLieu cl = getFormChatLieu();
            try {
                daocl.insert(cl);
                fillTableChatLieu();
                MsgBox.alert(this, "Thêm thành công!");
                clearFormChatLieu();
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm thất bại!");
            }
        }
    }

    boolean isValidatedChatLieu() {
        if (txtChatLieu.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống tên chất liệu!");
            return false;
        }
        return true;
    }

// ==========================SIZE===============================
    int rows = 1;
    SizeDAO daos = new SizeDAO();

    private void fillTableSize() {
        DefaultTableModel model = (DefaultTableModel) tblSize.getModel();
        model.setRowCount(0);
        try {
            List<Size> lists = daos.selectAll();
            for (Size s : lists) {
                Object[] row = {
                    s.getIDSize(), s.getTenSize()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void clearFormSize() {
        txtSize.setText("");
    }

    Size getFormSize() {
        Size s = new Size();
        s.setTenSize(txtSize.getText());
        return s;
    }

    private void setFormSize(Size s) {
        txtSize.setText(String.valueOf(s.getTenSize()));
    }

    private void editSize() {
        int ids = (int) tblSize.getValueAt(rows, 0);
        Size s = daos.selectById(ids);
        setFormSize(s);
    }

    private void deleteSize() {
        try {
            int ids = (int) tblSize.getValueAt(rows, 0);
            Size s = daos.selectById(ids);
            daos.delete(ids);
            fillTableSize();
            clearFormSize();
            MsgBox.alert(this, "Xóa thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }
    }

    private void insertSize() {
        if (isValidatedSize()) {
            Size s = getFormSize();
            try {
                daos.insert(s);
                fillTableSize();
                MsgBox.alert(this, "Thêm thành công!");
                clearFormSize();
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm thất bại!");
            }
        }
    }

    boolean isValidatedSize() {
        if (txtSize.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống Size!");
            return false;
        }
        return true;
    }

// ==========================NHÀ CUNG CẤP===============================
    int rowncc = 1;
    NhaCungCapDAO daoncc = new NhaCungCapDAO();

    private void fillTableNCC() {
        DefaultTableModel model = (DefaultTableModel) tblNhaCungCap.getModel();
        model.setRowCount(0);
        try {
            List<NhaCungCap> listncc = daoncc.selectAll();
            for (NhaCungCap ncc : listncc) {
                Object[] row = {
                    ncc.getIDNCC(), ncc.getTenNCC(), ncc.getSDT(), ncc.getDiaChi()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void clearFormNCC() {
        rowncc = 1;
        txtMaNCC.setText("");
        txtTenNCC.setText("");
        txtSDT.setText("");
        txtDiaChi.setText("");
    }

    NhaCungCap getFormNCC() {
        NhaCungCap ncc = new NhaCungCap();
        ncc.setIDNCC(txtMaNCC.getText());
        ncc.setTenNCC(txtTenNCC.getText());
        ncc.setSDT(txtSDT.getText());
        ncc.setDiaChi(txtDiaChi.getText());
        return ncc;
    }

    private void setFormNCC(NhaCungCap ncc) {
        txtMaNCC.setText(String.valueOf(ncc.getIDNCC()));
        txtTenNCC.setText(String.valueOf(ncc.getTenNCC()));
        txtSDT.setText(String.valueOf(ncc.getSDT()));
        txtDiaChi.setText(String.valueOf(ncc.getDiaChi()));
    }

    private void editNCC() {
        String idncc = (String) tblNhaCungCap.getValueAt(rowncc, 0);
        NhaCungCap ncc = daoncc.selectById(idncc);
        setFormNCC(ncc);
    }

    private void deleteNCC() {
        try {
            String idncc = (String) tblNhaCungCap.getValueAt(rowncc, 0);
            NhaCungCap ncc = daoncc.selectById(idncc);
            daoncc.delete(idncc);
            fillTableNCC();
            clearFormNCC();
            MsgBox.alert(this, "Xóa thành công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại!");
        }
    }

    private void insertNCC() {
        if (isValidatedNCC()) {
            NhaCungCap ncc = getFormNCC();
            try {
                daoncc.insert(ncc);
                fillTableNCC();
                MsgBox.alert(this, "Thêm thành công!");
                clearFormNCC();
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm thất bại!");
            }
        }
    }

    private void updateNCC() {
        if (isValidatedNCC()) {
            NhaCungCap ncc = getFormNCC();
            try {
                daoncc.update(ncc);
                fillTableNCC();
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại!");
            }
        }
    }

    boolean isValidatedNCC() {
        if (txtMaNCC.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống mã nhà cung cấp!");
            return false;
        }
        if (txtTenNCC.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống tên nhà cung cấp!");
            return false;
        }
        try {
            if (txtSDT.getText().isEmpty()) {
                MsgBox.alert(this, "Số điện thoại chưa được nhập!");
                return false;
            }
            double salary = Double.parseDouble(txtSDT.getText());
            Pattern pattern = Pattern.compile("0\\d{7,10}");
            Matcher matcher = pattern.matcher(txtSDT.getText());
            if (!matcher.find()) {
                MsgBox.alert(this, "Định dạng số điện thoại không hợp lệ!");
                return false;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Số điện thoại không hợp lệ (Phải là số)!");
            return false;
        }
        if (txtDiaChi.getText().isEmpty()) {
            MsgBox.alert(this, "Không để trống địa chỉ!");
            return false;
        }

        return true;
    }
}
